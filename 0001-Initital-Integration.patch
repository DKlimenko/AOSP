From 6850c375411cbff7d562bb1155e75816f270963b Mon Sep 17 00:00:00 2001
From: DK <kldimakl@gmail.com>
Date: Fri, 26 Nov 2021 11:10:42 +0200
Subject: [PATCH] Initital Integration

---
 hardware/interfaces/vhal/1.0/Android.bp       | 29 +++++++++
 hardware/interfaces/vhal/1.0/IVhal.aidl       | 15 +++++
 hardware/interfaces/vhal/1.0/IVhal.hal        | 41 +++++++++++++
 .../vhal/1.0/aidl_api/vhal/1/IVhal.aidl       | 15 +++++
 .../interfaces/vhal/1.0/default/Android.bp    | 41 +++++++++++++
 hardware/interfaces/vhal/1.0/default/Vhal.cpp | 59 +++++++++++++++++++
 hardware/interfaces/vhal/1.0/default/Vhal.h   | 47 +++++++++++++++
 .../android.hardware.vhal@1.0-service.rc      |  5 ++
 .../interfaces/vhal/1.0/default/service.cpp   | 27 +++++++++
 9 files changed, 279 insertions(+)
 create mode 100644 hardware/interfaces/vhal/1.0/Android.bp
 create mode 100644 hardware/interfaces/vhal/1.0/IVhal.aidl
 create mode 100644 hardware/interfaces/vhal/1.0/IVhal.hal
 create mode 100644 hardware/interfaces/vhal/1.0/aidl_api/vhal/1/IVhal.aidl
 create mode 100644 hardware/interfaces/vhal/1.0/default/Android.bp
 create mode 100644 hardware/interfaces/vhal/1.0/default/Vhal.cpp
 create mode 100644 hardware/interfaces/vhal/1.0/default/Vhal.h
 create mode 100644 hardware/interfaces/vhal/1.0/default/android.hardware.vhal@1.0-service.rc
 create mode 100644 hardware/interfaces/vhal/1.0/default/service.cpp

diff --git a/hardware/interfaces/vhal/1.0/Android.bp b/hardware/interfaces/vhal/1.0/Android.bp
new file mode 100644
index 0000000..2ea9de4
--- /dev/null
+++ b/hardware/interfaces/vhal/1.0/Android.bp
@@ -0,0 +1,29 @@
+// This file is autogenerated by hidl-gen -Landroidbp.
+
+package {
+    // See: http://go/android-license-faq
+    // A large-scale-change added 'default_applicable_licenses' to import
+    // all of the 'license_kinds' from "hardware_interfaces_license"
+    // to get the below license kinds:
+    //   SPDX-license-identifier-Apache-2.0
+    default_applicable_licenses: ["hardware_interfaces_license"],
+}
+
+aidl_interface {
+    name: "vhal",
+    versions: ["1"],
+    stability: "vintf",
+    srcs: ["IVhal.aidl"],
+    backend: {
+        java: {
+            enabled: true,
+            platform_apis: true,
+        },
+        cpp: {
+            enabled: true,
+        },
+        ndk: {
+            enabled: true,
+        },
+    },
+}
\ No newline at end of file
diff --git a/hardware/interfaces/vhal/1.0/IVhal.aidl b/hardware/interfaces/vhal/1.0/IVhal.aidl
new file mode 100644
index 0000000..64a72fd
--- /dev/null
+++ b/hardware/interfaces/vhal/1.0/IVhal.aidl
@@ -0,0 +1,15 @@
+// IRemoteService.aidl
+package android.hardware.vhal@1.0;
+
+// Declare any non-default types here with import statements
+
+/** Example service interface */
+interface IRemoteService {
+    /** Request the process init*/
+    void init();
+
+    /** Demonstrates some basic types that you can use as parameters
+     * and return values in AIDL.
+     */
+    void setMode(int mode);
+}
diff --git a/hardware/interfaces/vhal/1.0/IVhal.hal b/hardware/interfaces/vhal/1.0/IVhal.hal
new file mode 100644
index 0000000..9a7e488
--- /dev/null
+++ b/hardware/interfaces/vhal/1.0/IVhal.hal
@@ -0,0 +1,41 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package android.hardware.vhal@1.0;
+
+interface IVhal {
+  /**
+   * Convenience method to set up any state needed at runtime startup.  This is
+   * called once from the Vhal ManagerService during its boot phase.
+   */
+  @callflow(next={"*"})
+  @entry
+  @exit
+  init();
+
+  /**
+   * Set the mode state.  Possible states of the enabled parameter are:
+   * false -  mode is disabled, turn off all specific settings.
+   * true - mode is enabled, turn on all specific settings.
+   *
+   * This must be called whenever the the Android system enters or leaves
+   * mode. This will typically occur when the user switches to or from a
+   * application that is doing stereoscopic rendering.
+   */
+  @callflow(next={"*"})
+  @exit
+  setMode(bool enabled);
+};
diff --git a/hardware/interfaces/vhal/1.0/aidl_api/vhal/1/IVhal.aidl b/hardware/interfaces/vhal/1.0/aidl_api/vhal/1/IVhal.aidl
new file mode 100644
index 0000000..64a72fd
--- /dev/null
+++ b/hardware/interfaces/vhal/1.0/aidl_api/vhal/1/IVhal.aidl
@@ -0,0 +1,15 @@
+// IRemoteService.aidl
+package android.hardware.vhal@1.0;
+
+// Declare any non-default types here with import statements
+
+/** Example service interface */
+interface IRemoteService {
+    /** Request the process init*/
+    void init();
+
+    /** Demonstrates some basic types that you can use as parameters
+     * and return values in AIDL.
+     */
+    void setMode(int mode);
+}
diff --git a/hardware/interfaces/vhal/1.0/default/Android.bp b/hardware/interfaces/vhal/1.0/default/Android.bp
new file mode 100644
index 0000000..b810d63
--- /dev/null
+++ b/hardware/interfaces/vhal/1.0/default/Android.bp
@@ -0,0 +1,41 @@
+package {
+    // See: http://go/android-license-faq
+    // A large-scale-change added 'default_applicable_licenses' to import
+    // all of the 'license_kinds' from "hardware_interfaces_license"
+    // to get the below license kinds:
+    //   SPDX-license-identifier-Apache-2.0
+    default_applicable_licenses: ["hardware_interfaces_license"],
+}
+
+cc_library_shared {
+    name: "android.hardware.vhal@1.0-impl",
+    defaults: ["hidl_defaults"],
+    proprietary: true,
+    relative_install_path: "hw",
+    srcs: ["Vhal.cpp"],
+    shared_libs: [
+        "liblog",
+        "libcutils",
+        "libhardware",
+        "libbase",
+        "libcutils",
+        "libutils",
+        "libhidlbase",
+    ],
+}
+
+cc_binary {
+    relative_install_path: "hw",
+    defaults: ["hidl_defaults"],
+    proprietary: true,
+    name: "android.hardware.vhal@1.0-service",
+    init_rc: ["android.hardware.vhal@1.0-service.rc"],
+    srcs: ["service.cpp"],
+    shared_libs: [
+        "liblog",
+        "libdl",
+        "libutils",
+        "libhardware",
+        "libhidlbase",
+    ],
+}
diff --git a/hardware/interfaces/vhal/1.0/default/Vhal.cpp b/hardware/interfaces/vhal/1.0/default/Vhal.cpp
new file mode 100644
index 0000000..78effb5
--- /dev/null
+++ b/hardware/interfaces/vhal/1.0/default/Vhal.cpp
@@ -0,0 +1,59 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#define LOG_TAG "VrService"
+
+#include <log/log.h>
+
+#include <hardware/hardware.h>
+
+#include "Vhal.h"
+
+namespace android {
+namespace hardware {
+namespace vr {
+namespace V1_0 {
+namespace implementation {
+
+Vr::Vr() : {}
+
+// Methods from ::android::hardware::vr::V1_0::IVr follow.
+Return<void> Vr::init() {
+    return Void();
+}
+
+Return<void> Vr::setVrMode(bool enabled)  {
+    return Void();
+}
+
+IVr* HIDL_FETCH_IVhal(const char * /*name*/) {
+    const hw_module_t *hw_module = NULL;
+
+    int ret = hw_get_module(VR_HARDWARE_MODULE_ID, &hw_module);
+    if (ret == 0) {
+        return new Vhal(reinterpret_cast<vr_module_t*>(
+                const_cast<hw_module_t*>(hw_module)));
+    } else {
+        ALOGE("hw_get_module %s failed: %d", VR_HARDWARE_MODULE_ID, ret);
+        return nullptr;
+    }
+}
+
+} // namespace implementation
+}  // namespace V1_0
+}  // namespace vr
+}  // namespace hardware
+}  // namespace android
diff --git a/hardware/interfaces/vhal/1.0/default/Vhal.h b/hardware/interfaces/vhal/1.0/default/Vhal.h
new file mode 100644
index 0000000..5e619f9
--- /dev/null
+++ b/hardware/interfaces/vhal/1.0/default/Vhal.h
@@ -0,0 +1,47 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+#ifndef ANDROID_HARDWARE_VR_V1_0_VR_H
+#define ANDROID_HARDWARE_VR_V1_0_VR_H
+
+#include <android/hardware/vr/1.0/IVr.h>
+#include <hidl/MQDescriptor.h>
+
+namespace android {
+namespace hardware {
+namespace vr {
+namespace V1_0 {
+namespace implementation {
+
+
+struct Vhal: public IVhal {
+    Vhal();
+
+    // Methods from ::android::hardware::vr::V1_0::IVr follow.
+    Return<void> init()  override;
+    Return<void> setVrMode(bool enabled)  override;
+
+  private:
+};
+
+extern "C" IVhal* HIDL_FETCH_IVr(const char* name);
+
+}  // namespace implementation
+}  // namespace V1_0
+}  // namespace vr
+}  // namespace hardware
+}  // namespace android
+
+#endif  // ANDROID_HARDWARE_VR_V1_0_VR_H
diff --git a/hardware/interfaces/vhal/1.0/default/android.hardware.vhal@1.0-service.rc b/hardware/interfaces/vhal/1.0/default/android.hardware.vhal@1.0-service.rc
new file mode 100644
index 0000000..a2cce5b
--- /dev/null
+++ b/hardware/interfaces/vhal/1.0/default/android.hardware.vhal@1.0-service.rc
@@ -0,0 +1,5 @@
+service vendor.vr-1-0 /vendor/bin/hw/android.hardware.vhal@1.0-service
+    interface android.hardware.vhal@1.0::IVhal default
+    class hal
+    user system
+    group system
diff --git a/hardware/interfaces/vhal/1.0/default/service.cpp b/hardware/interfaces/vhal/1.0/default/service.cpp
new file mode 100644
index 0000000..f449e1f
--- /dev/null
+++ b/hardware/interfaces/vhal/1.0/default/service.cpp
@@ -0,0 +1,27 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+#define LOG_TAG "android.hardware.vhal@1.0-service"
+
+#include <android/hardware/vhal/1.0/IVhal.h>
+#include <hidl/LegacySupport.h>
+
+// Generated HIDL files
+using android::hardware::vhal::V1_0::IVhal;
+using android::hardware::defaultPassthroughServiceImplementation;
+
+int main() {
+    return defaultPassthroughServiceImplementation<IVhal>();
+}
-- 
2.25.1

